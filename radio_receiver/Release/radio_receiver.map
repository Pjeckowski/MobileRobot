Archive member included because of file (symbol)

d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
                              ./main.o (__divmodhi4)
d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                              d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o (exit)
d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
                              d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

dataToSend          0x5               ./main.o
RadioMode           0x1               ./main.o
radioRecBufor       0x5               ./main.o
irCounter           0x1               ./main.o
dummy               0x5               ./main.o
radioSendBufor      0x5               ./main.o
status              0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
LOAD ./main.o
START GROUP
LOAD d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a
LOAD d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libm.a
LOAD d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9a4
 *(.vectors)
 .vectors       0x00000000       0x54 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text          0x00000092        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x00000092       0x32 ./main.o
                0x00000092                init_SPI
 .text.send_SPI
                0x000000c4        0xa ./main.o
                0x000000c4                send_SPI
 .text.get_reg  0x000000ce       0x28 ./main.o
                0x000000ce                get_reg
 .text.r_w_radio
                0x000000f6       0x9a ./main.o
                0x000000f6                r_w_radio
 .text.init_radio
                0x00000190      0x176 ./main.o
                0x00000190                init_radio
 .text.reset_radio
                0x00000306       0x32 ./main.o
                0x00000306                reset_radio
 .text.radio_switchReceiver
                0x00000338       0x40 ./main.o
                0x00000338                radio_switchReceiver
 .text.radio_switchTransmiter
                0x00000378       0x40 ./main.o
                0x00000378                radio_switchTransmiter
 .text.radio_preparePayload
                0x000003b8       0x3e ./main.o
                0x000003b8                radio_preparePayload
 .text.radio_transmit
                0x000003f6       0x12 ./main.o
                0x000003f6                radio_transmit
 .text.radio_receive
                0x00000408       0x48 ./main.o
                0x00000408                radio_receive
 .text.uart_init
                0x00000450       0x14 ./main.o
                0x00000450                uart_init
 .text.uart_send
                0x00000464        0x8 ./main.o
                0x00000464                uart_send
 .text.uart_receive
                0x0000046c        0x8 ./main.o
                0x0000046c                uart_receive
 .text.uart_sendByteAsChar
                0x00000474       0x3e ./main.o
                0x00000474                uart_sendByteAsChar
 .text.uart_sendTable
                0x000004b2       0x3a ./main.o
                0x000004b2                uart_sendTable
 .text.uart_sendString
                0x000004ec       0x40 ./main.o
                0x000004ec                uart_sendString
 .text.uart_sendValueAsChar
                0x0000052c       0xb8 ./main.o
                0x0000052c                uart_sendValueAsChar
 .text.getBytes
                0x000005e4        0xc ./main.o
                0x000005e4                getBytes
 .text.getValFromBytes
                0x000005f0        0xc ./main.o
                0x000005f0                getValFromBytes
 .text.__vector_11
                0x000005fc       0x26 ./main.o
                0x000005fc                __vector_11
 .text.sendInfo
                0x00000622       0x18 ./main.o
                0x00000622                sendInfo
 .text.dataWorkout
                0x0000063a      0x140 ./main.o
                0x0000063a                dataWorkout
 .text.radioRec
                0x0000077a      0x122 ./main.o
                0x0000077a                radioRec
 .text.startup.main
                0x0000089c       0xa6 ./main.o
                0x0000089c                main
 .text.getTransmitData
                0x00000942        0xe ./main.o
                0x00000942                getTransmitData
 .text.libgcc.mul
                0x00000950        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x00000950       0x28 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
                0x00000950                _div
                0x00000950                __divmodhi4
 .text.libgcc   0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000978        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000978       0x28 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
                0x00000978                __udivmodhi4
 .text.libgcc   0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
                0x000009a0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009a0        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
                0x000009a0                _exit
                0x000009a0                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009a0        0x4 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009a4                _etext = .

.data           0x00800060       0x66 load address 0x000009a4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 .data.table    0x00800060        0x2 ./main.o
                0x00800060                table
 .data.headerCollectionLenght
                0x00800062        0x1 ./main.o
                0x00800062                headerCollectionLenght
 .data.headerCollection
                0x00800063        0xd ./main.o
                0x00800063                headerCollection
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800070       0x55 ./main.o
 *(.gnu.linkonce.d*)
                0x008000c6                . = ALIGN (0x2)
 *fill*         0x008000c5        0x1 
                0x008000c6                _edata = .
                0x008000c6                PROVIDE (__data_end, .)

.bss            0x008000c6       0x37
                0x008000c6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000c6        0x0 ./main.o
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_exit.o)
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008000c6        0x0 d:/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.radio_actionTimer
                0x008000c6        0x1 ./main.o
                0x008000c6                radio_actionTimer
 .bss.RadioState
                0x008000c7        0x1 ./main.o
                0x008000c7                RadioState
 .bss.maxEngineFill
                0x008000c8        0x1 ./main.o
                0x008000c8                maxEngineFill
 .bss.isFollowingLine
                0x008000c9        0x1 ./main.o
                0x008000c9                isFollowingLine
 .bss.isFollowingPoint
                0x008000ca        0x1 ./main.o
                0x008000ca                isFollowingPoint
 .bss.rEngineDir
                0x008000cb        0x1 ./main.o
                0x008000cb                rEngineDir
 .bss.lEngineDir
                0x008000cc        0x1 ./main.o
                0x008000cc                lEngineDir
 .bss.aREngineFill
                0x008000cd        0x1 ./main.o
                0x008000cd                aREngineFill
 .bss.aLEngineFill
                0x008000ce        0x1 ./main.o
                0x008000ce                aLEngineFill
 .bss.rEngineFill
                0x008000cf        0x1 ./main.o
                0x008000cf                rEngineFill
 .bss.lEngineFill
                0x008000d0        0x1 ./main.o
                0x008000d0                lEngineFill
 .bss.goalPosY  0x008000d1        0x4 ./main.o
                0x008000d1                goalPosY
 .bss.goalPosX  0x008000d5        0x4 ./main.o
                0x008000d5                goalPosX
 .bss.angle     0x008000d9        0x4 ./main.o
                0x008000d9                angle
 .bss.posY      0x008000dd        0x4 ./main.o
                0x008000dd                posY
 .bss.posX      0x008000e1        0x4 ./main.o
                0x008000e1                posX
 .bss.dataCount
                0x008000e5        0x1 ./main.o
                0x008000e5                dataCount
 *(COMMON)
 COMMON         0x008000e6       0x17 ./main.o
                0x008000e6                dataToSend
                0x008000eb                RadioMode
                0x008000ec                radioRecBufor
                0x008000f1                irCounter
                0x008000f2                dummy
                0x008000f7                radioSendBufor
                0x008000fc                status
                0x008000fd                PROVIDE (__bss_end, .)
                0x000009a4                __data_load_start = LOADADDR (.data)
                0x00000a0a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000fd        0x0
                0x008000fd                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000fd                PROVIDE (__noinit_end, .)
                0x008000fd                _end = .
                0x008000fd                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 ./main.o
                                 0x31 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(radio_receiver.elf elf32-avr)
LOAD linker stubs
